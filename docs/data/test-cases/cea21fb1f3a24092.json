{"uid":"cea21fb1f3a24092","name":"Test Case 18 : Therapy With Dr. Garcia Button is clickable and redirecting to related page","fullName":"Tests.Biomagnetism_Service.Biomagnetism_Service.test_BiomagnetismService.TestBiomagnetismService#test_therepy_with_dr_garcia_clickable_and_redirected","historyId":"450d805e91674e617f5d0ee4436876ad","time":{"start":1689855818247,"stop":1689855829383,"duration":11136},"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page  \n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd2a0>\n\n    @allure.title(\"Test Case 18 : Therapy With Dr. Garcia Button is clickable and redirecting to related page\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page\n    \n    \"\"\")\n    def test_therepy_with_dr_garcia_clickable_and_redirected(self):\n    \n        try:\n>           assert self.biomagnetisServicemObj.is_therepy_with_dr_garcia_clickable_and_redirected()\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/Biomagnetism_Service/Biomagnetism_Service/BiomagnetismService.py:296: in is_therepy_with_dr_garcia_clickable_and_redirected\n    self.do_click(BiomagnetismServiceElements.therapy_with_dr_garcia)\nPages/BasePage.py:61: in do_click\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1bfe91277d1fcc9caa3a5918b87581dd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f004880e830>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd2a0>\n\n    @allure.title(\"Test Case 18 : Therapy With Dr. Garcia Button is clickable and redirecting to related page\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page\n    \n    \"\"\")\n    def test_therepy_with_dr_garcia_clickable_and_redirected(self):\n    \n        try:\n            assert self.biomagnetisServicemObj.is_therepy_with_dr_garcia_clickable_and_redirected()\n        except:\n            allure.attach(self.biomagnetisServicemObj.driver.get_screenshot_as_png(),name=\"Load More Functionality Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Load More Functionality Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1689855721161,"stop":1689855722978,"duration":1817},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page  \n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd2a0>\n\n    @allure.title(\"Test Case 18 : Therapy With Dr. Garcia Button is clickable and redirecting to related page\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page\n    \n    \"\"\")\n    def test_therepy_with_dr_garcia_clickable_and_redirected(self):\n    \n        try:\n>           assert self.biomagnetisServicemObj.is_therepy_with_dr_garcia_clickable_and_redirected()\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/Biomagnetism_Service/Biomagnetism_Service/BiomagnetismService.py:296: in is_therepy_with_dr_garcia_clickable_and_redirected\n    self.do_click(BiomagnetismServiceElements.therapy_with_dr_garcia)\nPages/BasePage.py:61: in do_click\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1bfe91277d1fcc9caa3a5918b87581dd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f004880e830>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd2a0>\n\n    @allure.title(\"Test Case 18 : Therapy With Dr. Garcia Button is clickable and redirecting to related page\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, in dropdown, therapy with dr garcia is clickable and navigate to respective page\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>when mouse hovered on biomagnetism services, dropdown will be displayed clicking on therapy with dr garcia should navigate top respective page\n    \n    \"\"\")\n    def test_therepy_with_dr_garcia_clickable_and_redirected(self):\n    \n        try:\n            assert self.biomagnetisServicemObj.is_therepy_with_dr_garcia_clickable_and_redirected()\n        except:\n            allure.attach(self.biomagnetisServicemObj.driver.get_screenshot_as_png(),name=\"Load More Functionality Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Load More Functionality Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:143: AssertionError","steps":[{"name":"Move to Biomagnetism Service","time":{"start":1689855818247,"stop":1689855818535,"duration":288},"status":"passed","steps":[{"name":"Move Cursor To The Element","time":{"start":1689855818247,"stop":1689855818535,"duration":288},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"by_locator","value":"('xpath', \"(//span[@class='menu-text'][normalize-space()='Biomagnetism Services'])[1]\")"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Clicked On Therepy With Dr. Garcia","time":{"start":1689855818535,"stop":1689855828994,"duration":10459},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/Biomagnetism_Service/Biomagnetism_Service/BiomagnetismService.py\", line 296, in is_therepy_with_dr_garcia_clickable_and_redirected\n    self.do_click(BiomagnetismServiceElements.therapy_with_dr_garcia)\n  File \"/home/kishorekumarmahto/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/BasePage.py\", line 61, in do_click\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Clicked On Element","time":{"start":1689855818536,"stop":1689855828994,"duration":10458},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/home/kishorekumarmahto/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/BasePage.py\", line 61, in do_click\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"by_locator","value":"('xpath', \"(//span[@class='menu-text'][normalize-space()='Therapy with Dr. Garcia'])[1]\")"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Load More Functionality Is Failed","time":{"start":1689855829382,"stop":1689855829382,"duration":0},"status":"failed","statusMessage":"AssertionError: assert False\n","statusTrace":"  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Tests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py\", line 143, in test_therepy_with_dr_garcia_clickable_and_redirected\n    assert False\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"23e0ab25618a5ca4","name":"Load More Functionality Error","source":"23e0ab25618a5ca4.png","type":"image/png","size":1273314}],"parameters":[],"stepsCount":5,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"init_driver::0","time":{"start":1689855830558,"stop":1689855830613,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"parentSuite","value":"Tests.Biomagnetism_Service.Biomagnetism_Service"},{"name":"suite","value":"test_BiomagnetismService"},{"name":"subSuite","value":"TestBiomagnetismService"},{"name":"host","value":"isadmin"},{"name":"thread","value":"86160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Biomagnetism_Service.Biomagnetism_Service.test_BiomagnetismService"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"cea21fb1f3a24092.json","parameterValues":[]}