{"uid":"cb2950d08932b5a0","name":"Test Case 19 : Appointment Contact Information","fullName":"Tests.Biomagnetism_Service.Biomagnetism_Service.test_BiomagnetismService.TestBiomagnetismService#test_appointment_details_correct","historyId":"752baaaddcf5d35f8ef14155c5c8f1f6","time":{"start":1689855829395,"stop":1689855830555,"duration":1160},"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>\n\n    @allure.title(\"Test Case 19 : Appointment Contact Information\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    \"\"\")\n    def test_appointment_details_correct(self):\n    \n        try:\n>           assert self.biomagnetisServicemObj.is_appointment_details_correct()\nE           assert False\nE            +  where False = <bound method BiomagnetismService.is_appointment_details_correct of <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>>()\nE            +    where <bound method BiomagnetismService.is_appointment_details_correct of <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>> = <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>.is_appointment_details_correct\nE            +      where <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60> = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>.biomagnetisServicemObj\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:157: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>\n\n    @allure.title(\"Test Case 19 : Appointment Contact Information\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    \"\"\")\n    def test_appointment_details_correct(self):\n    \n        try:\n            assert self.biomagnetisServicemObj.is_appointment_details_correct()\n        except:\n            allure.attach(self.biomagnetisServicemObj.driver.get_screenshot_as_png(),name=\"Appointment Contact Information Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Appointment Contact Information Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:161: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1689855721161,"stop":1689855722978,"duration":1817},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>\n\n    @allure.title(\"Test Case 19 : Appointment Contact Information\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    \"\"\")\n    def test_appointment_details_correct(self):\n    \n        try:\n>           assert self.biomagnetisServicemObj.is_appointment_details_correct()\nE           assert False\nE            +  where False = <bound method BiomagnetismService.is_appointment_details_correct of <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>>()\nE            +    where <bound method BiomagnetismService.is_appointment_details_correct of <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>> = <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60>.is_appointment_details_correct\nE            +      where <Pages.Biomagnetism_Service.Biomagnetism_Service.BiomagnetismService.BiomagnetismService object at 0x7f0048973d60> = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>.biomagnetisServicemObj\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:157: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_BiomagnetismService.TestBiomagnetismService object at 0x7f006ddfd810>\n\n    @allure.title(\"Test Case 19 : Appointment Contact Information\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>validate, address with other cities and appointment dates and hours\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>address and contact deatils with appropriate appointment date and hours to be viewed\n    \n    \"\"\")\n    def test_appointment_details_correct(self):\n    \n        try:\n            assert self.biomagnetisServicemObj.is_appointment_details_correct()\n        except:\n            allure.attach(self.biomagnetisServicemObj.driver.get_screenshot_as_png(),name=\"Appointment Contact Information Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Appointment Contact Information Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py:161: AssertionError","steps":[{"name":"Taking Body Content","time":{"start":1689855829395,"stop":1689855830129,"duration":734},"status":"passed","steps":[{"name":"Taking Text from element","time":{"start":1689855829396,"stop":1689855830129,"duration":733},"status":"passed","steps":[],"attachments":[{"uid":"95024fecc25727d9","name":"Element Screenshot","source":"95024fecc25727d9.png","type":"image/png","size":1272757}],"parameters":[{"name":"by_locator","value":"('xpath', '//body')"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Checking New Jersey Details","time":{"start":1689855830129,"stop":1689855830129,"duration":0},"status":"passed","steps":[{"name":"New Jersey Details Are Not Visible And Correct","time":{"start":1689855830129,"stop":1689855830129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Checking New York Details","time":{"start":1689855830129,"stop":1689855830129,"duration":0},"status":"passed","steps":[{"name":"New York Details Are Not Visible And Correct","time":{"start":1689855830129,"stop":1689855830129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"New Jersey and New York Contact Information Are Not Visible And Correct","time":{"start":1689855830129,"stop":1689855830129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Appointment Contact Information Is Failed","time":{"start":1689855830555,"stop":1689855830555,"duration":0},"status":"failed","statusMessage":"AssertionError: assert False\n","statusTrace":"  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Tests/Biomagnetism_Service/Biomagnetism_Service/test_BiomagnetismService.py\", line 161, in test_appointment_details_correct\n    assert False\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"fec2ea16b84a633b","name":"Appointment Contact Information Error","source":"fec2ea16b84a633b.png","type":"image/png","size":1273314}],"parameters":[],"stepsCount":8,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"init_driver::0","time":{"start":1689855830558,"stop":1689855830613,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"parentSuite","value":"Tests.Biomagnetism_Service.Biomagnetism_Service"},{"name":"suite","value":"test_BiomagnetismService"},{"name":"subSuite","value":"TestBiomagnetismService"},{"name":"host","value":"isadmin"},{"name":"thread","value":"86160-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Biomagnetism_Service.Biomagnetism_Service.test_BiomagnetismService"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"cb2950d08932b5a0.json","parameterValues":[]}