{"uid":"3cd31433df9b27fb","name":"Test Case 2 : Store Dropdown Menu Visibility","fullName":"Store_Reviews.Store.test_store.TestStore#test_store_dropdown_menu_visibility","historyId":"f0eb44394fd5654d2c0ad53837a164d8","time":{"start":1689246384352,"stop":1689246397808,"duration":13456},"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_store.TestStore object at 0x7f84e4aedb40>\n\n    @allure.title(\"Test Case 2 : Store Dropdown Menu Visibility\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    \"\"\")\n    def test_store_dropdown_menu_visibility(self):\n        TestStore.storeObj = Store(self.driver,self.wait)\n        try:\n>           assert TestStore.storeObj.check_visibility_of_store_dropdown()\n\nTests/Store_Reviews/Store/test_store.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages/Store_Reviews/Store/Store.py:42: in check_visibility_of_store_dropdown\n    dropdownElement = self.get_text_from_element_only(StoreElements.store_dropdown)\nPages/BasePage.py:157: in get_text_from_element_only\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94e71c780302382897b624b426f15a25\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f84e4b311b0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_store.TestStore object at 0x7f84e4aedb40>\n\n    @allure.title(\"Test Case 2 : Store Dropdown Menu Visibility\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    \"\"\")\n    def test_store_dropdown_menu_visibility(self):\n        TestStore.storeObj = Store(self.driver,self.wait)\n        try:\n            assert TestStore.storeObj.check_visibility_of_store_dropdown()\n        except:\n            allure.attach(TestStore.storeObj.driver.get_screenshot_as_png(),name=\"Store Dropdown Menu Visibility Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Store Dropdown Menu  Visibility Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Store_Reviews/Store/test_store.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":6,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1689246370573,"stop":1689246372068,"duration":1495},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"descriptionHtml":"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    ","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_store.TestStore object at 0x7f84e4aedb40>\n\n    @allure.title(\"Test Case 2 : Store Dropdown Menu Visibility\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    \"\"\")\n    def test_store_dropdown_menu_visibility(self):\n        TestStore.storeObj = Store(self.driver,self.wait)\n        try:\n>           assert TestStore.storeObj.check_visibility_of_store_dropdown()\n\nTests/Store_Reviews/Store/test_store.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages/Store_Reviews/Store/Store.py:42: in check_visibility_of_store_dropdown\n    dropdownElement = self.get_text_from_element_only(StoreElements.store_dropdown)\nPages/BasePage.py:157: in get_text_from_element_only\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"94e71c780302382897b624b426f15a25\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f84e4b311b0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_store.TestStore object at 0x7f84e4aedb40>\n\n    @allure.title(\"Test Case 2 : Store Dropdown Menu Visibility\")\n    @allure.description_html(\"\"\"\n    <br><b>Test Case Description:</b>\n    <br><br>Validate that once we mouse overing to the stores module in the home page all the dropdown options are opening or not?\n    \n    <br><br><b>Expeceted Results:</b>\n    <br><br>All the dropdown options should show once we mouse hovering to stores module in the home page.\n    \n    \"\"\")\n    def test_store_dropdown_menu_visibility(self):\n        TestStore.storeObj = Store(self.driver,self.wait)\n        try:\n            assert TestStore.storeObj.check_visibility_of_store_dropdown()\n        except:\n            allure.attach(TestStore.storeObj.driver.get_screenshot_as_png(),name=\"Store Dropdown Menu Visibility Error\", attachment_type= allure.attachment_type.PNG)\n            with allure.step(\"Store Dropdown Menu  Visibility Is Failed\"):\n>               assert False\nE               assert False\n\nTests/Store_Reviews/Store/test_store.py:48: AssertionError","steps":[{"name":"Initialiazing the webdriver","time":{"start":1689246384352,"stop":1689246384352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"driver","value":"<undetected_chromedriver.Chrome (session=\"94e71c780302382897b624b426f15a25\")>"},{"name":"wait","value":"<selenium.webdriver.support.wait.WebDriverWait (session=\"94e71c780302382897b624b426f15a25\")>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Opening Base Url","time":{"start":1689246384352,"stop":1689246386997,"duration":2645},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Moving the cursor to the store","time":{"start":1689246386997,"stop":1689246387276,"duration":279},"status":"passed","steps":[{"name":"Move Cursor To The Element","time":{"start":1689246386997,"stop":1689246387276,"duration":279},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"by_locator","value":"('xpath', \"(//span[@class='menu-text'][normalize-space()='Store'])[1]\")"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Checking Dropdown Menu","time":{"start":1689246387276,"stop":1689246397369,"duration":10093},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/Store_Reviews/Store/Store.py\", line 42, in check_visibility_of_store_dropdown\n    dropdownElement = self.get_text_from_element_only(StoreElements.store_dropdown)\n  File \"/home/kishorekumarmahto/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/BasePage.py\", line 157, in get_text_from_element_only\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Taking Text from element","time":{"start":1689246387277,"stop":1689246397368,"duration":10091},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/home/kishorekumarmahto/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Pages/BasePage.py\", line 157, in get_text_from_element_only\n    element = self.wait.until(EC.visibility_of_element_located(by_locator))\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"by_locator","value":"('xpath', \"(//ul[@class='sub-menu'])[5]\")"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Store Dropdown Menu  Visibility Is Failed","time":{"start":1689246397808,"stop":1689246397808,"duration":0},"status":"failed","statusMessage":"AssertionError: assert False\n","statusTrace":"  File \"/home/kishorekumarmahto/my_backup/Testing/Dr._Garcia_Biomagnetism_website/Tests/Store_Reviews/Store/test_store.py\", line 48, in test_store_dropdown_menu_visibility\n    assert False\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"dec256ec4f55d4c6","name":"Store Dropdown Menu Visibility Error","source":"dec256ec4f55d4c6.png","type":"image/png","size":1283915}],"parameters":[],"stepsCount":7,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"init_driver::0","time":{"start":1689246477558,"stop":1689246477619,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"parentSuite","value":"Store_Reviews.Store"},{"name":"suite","value":"test_store"},{"name":"subSuite","value":"TestStore"},{"name":"host","value":"isadmin"},{"name":"thread","value":"39820-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Store_Reviews.Store.test_store"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"35c2fd67d11d8bf7","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689246199050,"stop":1689246213257,"duration":14207}},{"uid":"8ac03f24477c5d07","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689244913592,"stop":1689244927184,"duration":13592}},{"uid":"d62ef7751cc2c97d","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689243853008,"stop":1689243866661,"duration":13653}},{"uid":"3abc62ceb613b757","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689243517127,"stop":1689243530672,"duration":13545}},{"uid":"b1786b014b7f35d0","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689239680689,"stop":1689239694853,"duration":14164}},{"uid":"b3d5e4bddc37c427","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1689239403021,"stop":1689239416723,"duration":13702}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"3cd31433df9b27fb.json","parameterValues":[]}